@Library("my_library") _
pipeline {
    agent any
    stages {
        stage('checkout') {
            steps {
                script {
                    echo "Checking out code from Git repository"
                    def config = [
                        url: 'https://github.com/AdidelaHarishReddy/myProject.git',
                        credentialsId: 'git-hub_token',
                        branch: 'main'
                    ]
                    gitcheckout(config)
                    sh '''
                        ls -a
                    '''
                }
            }
        }
        stage('code quality checking') {
        steps {
            script {
                withSonarQubeEnv('sonarserver') {
                    echo "code quality checking the project"
                    sh '''
                        sonar-scanner 
                        #-Dsonar.projectKey=my_project
                        # sonar-scanner.
                        # --sonar-project-key=my_project
                    '''
                }
            }
        }
    }
    stage('check quality gate result') {
        steps {
            script {
                timeout(time: 3, unit: 'MINUTES') {
                    echo "Checking quality gate result"
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
    stage('tryvi fs scan') {
        steps {
            script {
                echo "Running Tryvi fs scan"
                sh '''
                    wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl
                    tryvi fs scan --format template --template "@html.tpl" --severity HIGH,CRITICAL -O trivy_report.html
                '''
                publishHTML (target : [allowMissing: false,
                             alwaysLinkToLastBuild: true,
                             keepAll: true,
                             reportDir: '.',
                             reportFiles: 'trivy_report.html',
                             reportName: 'trivy vulnerability report',
                             reportTitles: 'The Report'])
            }
        }
    }

    }
}
    // post {
    //     always {
    //         script {
    //             echo "Cleaning up old Docker containers"
    //             sh """
    //                 docker ps -a | grep 'Exited' | awk '{print \$1}' | xargs -r docker rm
    //             """
    //         }
    //     }
    // }

